# escape=`

# https://docs.microsoft.com/en-us/visualstudio/install/build-tools-container?view=vs-2019

# Use the specific Windows Server Core image with .NET Framework 4.8.
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8-20200714-windowsservercore-ltsc2019

# Restore the default Windows shell for correct batch processing.
SHELL ["cmd", "/S", "/C"]

WORKDIR C:\TEMP

# Download the Build Tools bootstrapper.
ADD https://aka.ms/vs/16/release/vs_buildtools.exe C:\TEMP\vs_buildtools.exe

# Install Build Tools with the Microsoft.VisualStudio.Workload.AzureBuildTools workload, excluding workloads and components with known issues.
# This step must run with internet connection
RUN vs_buildtools.exe --quiet --wait --norestart --nocache `
    --installPath C:\BuildTools `
    --add Microsoft.VisualStudio.Workload.AzureBuildTools `
    --remove Microsoft.VisualStudio.Component.Windows10SDK.10240 `
    --remove Microsoft.VisualStudio.Component.Windows10SDK.10586 `
    --remove Microsoft.VisualStudio.Component.Windows10SDK.14393 `
    --remove Microsoft.VisualStudio.Component.Windows81SDK `
 || IF "%ERRORLEVEL%"=="3010" EXIT 0


SHELL ["powershell", "-command"]
# Install OpenSSH Server
#RUN Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
#RUN Set-Service -Name sshd -StartupType 'Automatic'
ADD https://github.com/PowerShell/Win32-OpenSSH/releases/download/v7.9.0.0p1-Beta/OpenSSH-Win64.zip C:\TEMP\OpenSSH-Win64.zip
RUN Expand-Archive OpenSSH-Win64.zip -DestinationPath C:\Windows\System32
RUN C:\Windows\System32\OpenSSH-Win64\install-sshd.ps1

# Process sshd setting files
COPY ssh\* C:\ProgramData\ssh\
RUN C:\Windows\System32\OpenSSH-Win64\FixHostFilePermissions.ps1 -Confirm:$false

# Set default SSH shell as Git Bash
RUN New-ItemProperty -Path "HKLM:\SOFTWARE\OpenSSH" -Name DefaultShell -Value "C:\TEMP\Docker\Tools\PortableGit-2.14.3-64-bit\bin\bash.exe" -PropertyType String -Force

RUN C:\ProgramData\ssh\administrators_authorized_keys.ps1

# Create a user to login, as containeradministrator password is unknown
RUN net USER ssh "Passw0rd" /ADD && net localgroup "Administrators" "ssh" /ADD
#RUN mkdir C:\Users\ssh\.ssh
#COPY authorized_keys C:\Users\ssh\.ssh\

RUN mv C:\ProgramData\ssh\mklink.bat C:\

# Define the entry point for the docker container.
# This entry point starts the developer command prompt and launches the PowerShell shell.
#ENTRYPOINT ["C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat", "&&", "powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]
#ENTRYPOINT ["C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat", "&&", "powershell.exe", "-NoExit", "Start-Service", "sshd"]
ENTRYPOINT ["C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat", "&&", "powershell.exe", "-NoExit", "Start-Service", "sshd", ";", "Get-Content", "C:\\ProgramData\\ssh\\sshd_config", "-Wait"]
